<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bio.invoke.com.cn/</id>
    <title>Gridea</title>
    <updated>2019-08-10T16:50:33.674Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://bio.invoke.com.cn/"/>
    <link rel="self" href="https://bio.invoke.com.cn//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://bio.invoke.com.cn//images/avatar.png</logo>
    <icon>https://bio.invoke.com.cn//favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[Tars框架搭建]]></title>
        <id>https://bio.invoke.com.cn//post/tars-kuang-jia-da-jian</id>
        <link href="https://bio.invoke.com.cn//post/tars-kuang-jia-da-jian">
        </link>
        <updated>2019-08-10T16:47:59.000Z</updated>
        <content type="html"><![CDATA[<p>Tars框架是腾讯开源的微服务管治架构，包含RPC协议和模型、负载均衡、注册中心、配置中心、服务生命周期管理、服务性能监控、服务链路监控等等模块。</p>
<p>框架本身使用C++开发，支持c++、nodejs、java、php等语言，比较合适Yodo1平台部分微服务管理<br>
<img src="https://bio.invoke.com.cn//post-images/1565455758624.png" alt=""><br>
按照类型分为三大模块</p>
<p>节点指的是某台 物理机/虚拟机，即某个操作系统实例</p>
<p>模块	服务	进程	备注<br>
基础核心服务	RegistryService	tarsregistry	微服务管治核心，服务注册/发现、名字服务、路由服务，各框架服务之间的通信桥<br>
AdminRegistryService	tarsAdminRegistry	对接WebManager的服务<br>
ConfigService	tarsconfig	配置服务，统一管理、下发配置<br>
PatchService	tarspatch	服务生命周期管理，集中进行服务节点和业务节点的远程停止、远程更新、远程 启动以及历史记录管理<br>
附加服务	LogService	tarslog	各节点的日志远程上行存储服务<br>
NotifyService	tarsnotify	各节点的敏感错误信息上行服务， 例如DB访问超时、数据解析失败<br>
StatService	tarsstat	各节点的预设的运行信息上行服务 ，例如流量、耗时、超时率、负载等等<br>
PropertyService	tarsproperty	各节点的业务相关属性信息上行服务， 例如cache未命中场景、订单支付金额、玩家动作统计等等<br>
管理Web服务	WebManager	pm2	Web管理界面，用Web的方式管理服务、触发Patch、查看Log\Notify\Stat\Property等等，基于Vue + nodejs + pm2<br>
同时，每个节点中，包含一个tarsnode进程，它服务着该节点下所有业务服务(pm2,tomcat,nginx等等)</p>
<p>tarsnode会收集每个业务服务等心跳包向RegistryService汇报，并承载着PatchService的请求，通过执行shell来停止、更新、启动业务服务。</p>
<p>数据方面，包括了一下两方面</p>
<p>1、注册中心和配置中心等核心支撑数据</p>
<p>2、日志服务、监控等模块的流水型数据</p>
<p>都选择了mysql作为数据存储，并且包含了按照日期的分表策略，但貌似没有自动清理逻辑</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://bio.invoke.com.cn//post/hello-gridea</id>
        <link href="https://bio.invoke.com.cn//post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>